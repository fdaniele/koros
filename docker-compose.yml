version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9093:9093"
    depends_on:
        zookeeper:
         condition: service_healthy
    environment:
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms256M"
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: SSL://kafka:9093
      KAFKA_LISTENERS: SSL://0.0.0.0:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: SSL:SSL
      KAFKA_INTER_BROKER_LISTENER_NAME: SSL
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.server.keystore.jks
      KAFKA_SSL_KEY_CREDENTIALS: keystore-creds
      KAFKA_SSL_KEYSTORE_CREDENTIALS: keystore-creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.server.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: truststore-creds
      KAFKA_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.server.truststore.jks
      KAFKA_SSL_TRUSTSTORE_PASSWORD: trustk0r0s2025!
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./kafka/create-topics.sh:/create-topics.sh
      - ./kafka/secrets:/etc/kafka/secrets
    command: ["bash", "-c", "(/create-topics.sh &) && /etc/confluent/docker/run"]
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "kafka:9093", "--command-config", "/etc/kafka/secrets/client-ssl.properties"]
      interval: 10s
      timeout: 5s
      retries: 10

  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  producer:
    build: ./koros-producer-service
    ports:
      - "8081:8081"
    depends_on:
      kafka:
        condition: service_healthy
      mongo:
        condition: service_started
    volumes:
      - ./kafka/secrets:/etc/kafka/secrets

  middleware:
    build: ./koros-middleware
    ports:
      - "8082:8082"
    depends_on:
      kafka:
        condition: service_healthy
      mongo:
        condition: service_started
    volumes:
      - ./kafka/secrets:/etc/kafka/secrets

  consumer:
    build: ./koros-consumer-service
    ports:
      - "8083:8083"
    depends_on:
      kafka:
        condition: service_healthy
      mongo:
        condition: service_started
    volumes:
      - ./kafka/secrets:/etc/kafka/secrets
      
volumes:
  mongo_data: